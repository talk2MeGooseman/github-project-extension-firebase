export function Firebase(admin) {
  // Set env configs by firebase functions:config:set github.secret="SECRET"
  // Access set env configs via functions.config()
  const db = admin.firestore();

  const BROADCASTER_COLLECTION = 'broadcasters'

  export async function saveGithubInfo(data, decoded) {
    var saveRef = db.collection(BROADCASTER_COLLECTION);

    saveRef.doc(decoded.channel_id).set(data);
  }

  export async function setSelectedRepos(selected_repos, decoded) {
    var saveRef = db.collection(BROADCASTER_COLLECTION);
    await saveRef.doc(decoded.channel_id).set({
      selected_repos: selected_repos,
    }, {
      merge: true
    });

    return getBroadcasterInfo(decoded.channel_id);
  }

  export async function getSelectedRepos(channel_id, selected_repos) {
    var channelRef = db.collection(BROADCASTER_COLLECTION).doc(channel_id);

    try {
      const doc = await channelRef.get();
      // returns promise till data is resolved
      const userData = await doc.data();
    } catch (error) {
      console.log(error);
      return null;
    }

    return userData.selected_repos.map((repo_id) => {
      return userData.repos.find((repo) => repo.id === repo_id);
    });
  }

  export async function getBroadcasterInfo(channel_id) {
    const channelRef = db.collection(BROADCASTER_COLLECTION).doc(channel_id);
    try {
      const doc = await channelRef.get();
      // returns promise till data is resolved
      return doc.data();
    } catch (error) {
      console.log(error);
      return null;
    }
  }
};
